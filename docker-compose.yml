version: '3.4'

volumes:
  openvpn-data:
  nginx-proxy-vhost:
  nginx-proxy-html:
  nginx-proxy-dhparam:
  nginx-proxy-certs:
  seq-data:

x-logging: &default-logging
  driver: gelf
  options:
    gelf-address: udp://localhost:12201

services:
  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy:alpine
    depends_on:
      - gandelf
    logging: *default-logging
    ports:
      - 80:80
      - 4433:443
    restart: always
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/nginx-proxy.conf:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-proxy-vhost:/etc/nginx/vhost.d
      - nginx-proxy-html:/usr/share/nginx/html
      - nginx-proxy-dhparam:/etc/nginx/dhparam
      - nginx-proxy-certs:/etc/nginx/certs:ro

  letsencrypt-nginx-proxy-companion:
    container_name: letsencrypt-nginx-proxy-companion
    image: jrcs/letsencrypt-nginx-proxy-companion:stable
    depends_on:
      - gandelf
    logging: *default-logging
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx-proxy-vhost:/etc/nginx/vhost.d
      - nginx-proxy-html:/usr/share/nginx/html
      - nginx-proxy-certs:/etc/nginx/certs
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy

  www:
    container_name: www
    image: nginx:alpine
    depends_on:
      - gandelf
    logging: *default-logging
    restart: always
    volumes:
      - ./www:/www:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-www.conf:/etc/nginx/nginx-www.conf:ro
    environment:
      VIRTUAL_HOST: ${HOST}
      LETSENCRYPT_HOST: ${HOST}
      LETSENCRYPT_EMAIL: ${EMAIL}

  telegram:
    container_name: telegram
    build:
      context: .
      dockerfile: Dockerfile-telegram
      args:
        HOST: telegram.${HOST}
        APP_ID: ${TELEGRAM_APP_ID}
        APP_HASH: ${TELEGRAM_APP_HASH}
    depends_on:
      - gandelf
    logging: *default-logging
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-www.conf:/etc/nginx/nginx-www.conf:ro
      - ./nginx-telegram.conf:/etc/nginx/nginx-telegram.conf:ro
    environment:
      VIRTUAL_HOST: telegram.${HOST}
      LETSENCRYPT_HOST: telegram.${HOST}
      LETSENCRYPT_EMAIL: ${EMAIL}

  openvpn:
    container_name: openvpn
    image: kylemanna/openvpn:latest
    cap_add:
      - NET_ADMIN
    depends_on:
      - gandelf
    logging: *default-logging
    ports:
      - 443:1194/udp
    restart: always
    volumes:
      - openvpn-data:/etc/openvpn

  openvpn-tcp:
    container_name: openvpn-tcp
    image: kylemanna/openvpn:latest
    cap_add:
      - NET_ADMIN
    depends_on:
      - gandelf
    logging: *default-logging
    ports:
      - 443:1194/tcp
    restart: always
    volumes:
      - openvpn-data:/etc/openvpn:ro
    command: ovpn_run --proto tcp --port-share ${HOST_IP} 4433

  dante:
    container_name: dante
    build:
      context: .
      dockerfile: Dockerfile-dante
      args:
        DANTE_USER: ${DANTE_USER}
        DANTE_PASSWORD: ${DANTE_PASSWORD}
    depends_on:
      - gandelf
    logging: *default-logging
    ports:
      - 8080:1080
    restart: always
    volumes:
      - ./sockd.conf:/etc/sockd.conf:ro

  ble-light:
    container_name: ble-light
    image: nginx:alpine
    depends_on:
      - gandelf
    logging: *default-logging
    restart: always
    volumes:
      - ./ble-light:/www:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-www.conf:/etc/nginx/nginx-www.conf:ro
    environment:
      VIRTUAL_HOST: blelight.${HOST}
      LETSENCRYPT_HOST: blelight.${HOST}
      LETSENCRYPT_EMAIL: ${EMAIL}

  calibre:
    container_name: calibre
    image: technosoft2000/calibre-web
    depends_on:
      - gandelf
    logging: *default-logging
    restart: always
    volumes:
      - ./calibre:/books
    environment:
      VIRTUAL_HOST: calibre.${HOST}
      LETSENCRYPT_HOST: calibre.${HOST}
      LETSENCRYPT_EMAIL: ${EMAIL}

  seq:
    container_name: seq
    image: datalust/seq:latest
    restart: always
    volumes:
      - seq-data:/data
    environment:
      ACCEPT_EULA: Y
      VIRTUAL_HOST: seq.${HOST}
      LETSENCRYPT_HOST: seq.${HOST}
      LETSENCRYPT_EMAIL: ${EMAIL}

  gandelf:
    container_name: gandelf
    image: sitapati/gandelf
    depends_on:
      - seq
    logging:
      driver: json-file
      options:
        max-size: '100k'
        max-file: '20'
    restart: always
    ports:
      - 12201:12201/udp
    environment:
      SEQ_URL: http://seq
      SEQ_API_KEY: ${SEQ_API_KEY}
      ECHO_LOCAL: 'true'

  smtp:
    container_name: smtp
    image: namshi/smtp
    depends_on:
      - gandelf
    logging: *default-logging
    restart: always
    environment:
      MAILNAME: ${HOST}

  sharex:
    container_name: sharex
    build:
      context: .
      dockerfile: Dockerfile-sharex
    depends_on:
      - gandelf
    logging: *default-logging
    restart: always
    volumes:
      - ./sharex-config.json:/sharex/src/config.json:ro
      - ./sharex:/sharex/src/server/uploads
    environment:
      VIRTUAL_HOST: sharex.${HOST}
      LETSENCRYPT_HOST: sharex.${HOST}
      LETSENCRYPT_EMAIL: ${EMAIL}

  funbox:
    container_name: funbox
    build:
      context: ./funbox
    depends_on:
      - gandelf
    logging: *default-logging
    restart: always

  duplicati:
    container_name: duplicati
    image: duplicati/duplicati
    depends_on:
      - gandelf
    logging: *default-logging
    volumes:
      - ./duplicati:/data
      - .:/source
    restart: always
    environment:
      VIRTUAL_HOST: duplicati.${HOST}
      VIRTUAL_PORT: 8200
      LETSENCRYPT_HOST: duplicati.${HOST}
      LETSENCRYPT_EMAIL: ${EMAIL}
